AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function demo.
Resources:
  demo:
    Type: AWS::Lambda::Function
    Properties:
        Code:
          ZipFile: |
              import json
              import boto3
              import cfnresponse
              import logging
              LOGGER = logging.getLogger()
              LOGGER.setLevel(logging.INFO)
              def lambda_handler(event, context):
                try:
                    LOGGER.info('Event structure: %s', event)
                    LOGGER.info('Our Lambda function role Arn ${lambda_function_role_arn}')
                    keyname = 'UserName'
                    ssm = boto3.client('ssm')
                    parameter = ssm.get_parameter(Name= keyname, WithDecryption=True)
                    print(parameter['Parameter']['Value'])
                    file_name = "demofile.txt"
                    lambdapath = "/tmp/" + file_name
                    bucket_name = "sadfaaafdaafasafa"
                    with open(lambdapath, 'w+') as file:
                      file.write('Name :'+ keyname + '\n')
                      file.write('Value :'+parameter['Parameter']['Value'] + '\n' )
                      file.close()
                    s3 = boto3.resource('s3')
                    s3.meta.client.upload_file(lambdapath,bucket_name,file_name)
                    results = client.list_objects(Bucket= bucket_name, Prefix=file_name)
                    responseData = {}
                    if 'Contents' in results:
                      responseData = {'key': 'success'}
                    cfnresponse.send(event, context, cfnresponse.SUCCESS,responseData)
                except Exception as e:
                    LOGGER.error(e)
        Description: >
          Function to publish SSM parameters to S3
        FunctionName: index
        Handler: index.lambda_handler
        Runtime: python3.7 
        Timeout: 300
        Role:
           Fn::GetAtt:
             - lambdarole
             - Arn
  lambdarole:
    Type: AWS::IAM::Role
    Properties:
        RoleName: lambda-role
        AssumeRolePolicyDocument:
            Statement:
              - Action:
                - sts:AssumeRole
                Effect: Allow
                Principal:
                  Service:
                  - lambda.amazonaws.com
            Version: 2012-10-17
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSLambdaExecute
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/AmazonSSMFullAccess
          - arn:aws:iam::aws:policy/CloudWatchFullAccess
        Path: /

   

